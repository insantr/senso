set(ENV{PATH} "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin")
set(PLATFORMIO_CMD "/usr/local/bin/platformio")

SET(CMAKE_C_COMPILER "/Users/aleksandr.komarica/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-gcc")
SET(CMAKE_CXX_COMPILER "/Users/aleksandr.komarica/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-g++")
SET(CMAKE_CXX_FLAGS_DISTRIBUTION "-fno-rtti -fno-exceptions -std=gnu++11 -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -Os -g3 -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -DARDUINO=10805 -DARDUINO_ARCH_ESP32 -DARDUINO_VARIANT=&quot;pocket_32&quot; -DARDUINO_BOARD=&quot;WeMos\\ WiFi\\ &amp;\\ Bluetooth\\ Battery&quot; -DESP32 -DESP_PLATFORM -DF_CPU=240000000L -DHAVE_CONFIG_H -DMBEDTLS_CONFIG_FILE=&quot;mbedtls/esp_config.h&quot; -DPLATFORMIO=30502 -DARDUINO_Pocket32")
SET(CMAKE_C_FLAGS_DISTRIBUTION "-Wno-old-style-declaration -std=gnu99 -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -Os -g3 -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -DARDUINO=10805 -DARDUINO_ARCH_ESP32 -DARDUINO_VARIANT=&quot;pocket_32&quot; -DARDUINO_BOARD=&quot;WeMos\\ WiFi\\ &amp;\\ Bluetooth\\ Battery&quot; -DESP32 -DESP_PLATFORM -DF_CPU=240000000L -DHAVE_CONFIG_H -DMBEDTLS_CONFIG_FILE=&quot;mbedtls/esp_config.h&quot; -DPLATFORMIO=30502 -DARDUINO_Pocket32")
set(CMAKE_CXX_STANDARD 11)

add_definitions(-D'ARDUINO=10805')
add_definitions(-D'ARDUINO_ARCH_ESP32')
add_definitions(-D'ARDUINO_VARIANT=\"pocket_32\"')
add_definitions(-D'ARDUINO_BOARD=\"WeMos WiFi & Bluetooth Battery\"')
add_definitions(-D'ESP32')
add_definitions(-D'ESP_PLATFORM')
add_definitions(-D'F_CPU=240000000L')
add_definitions(-D'HAVE_CONFIG_H')
add_definitions(-D'MBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\"')
add_definitions(-D'PLATFORMIO=30502')
add_definitions(-D'ARDUINO_Pocket32')
add_definitions(-D'__DBL_MIN_EXP__=\(-1021\)')
add_definitions(-D'__UINT_LEAST16_MAX__=0xffff')
add_definitions(-D'__ATOMIC_ACQUIRE=2')
add_definitions(-D'__FLT_MIN__=1.1754943508222875e-38F')
add_definitions(-D'__GCC_IEC_559_COMPLEX=0')
add_definitions(-D'__UINT_LEAST8_TYPE__=unsigned char')
add_definitions(-D'__INTMAX_C\(c\)=c \#\# LL')
add_definitions(-D'__CHAR_BIT__=8')
add_definitions(-D'__UINT8_MAX__=0xff')
add_definitions(-D'__WINT_MAX__=0xffffffffU')
add_definitions(-D'__ORDER_LITTLE_ENDIAN__=1234')
add_definitions(-D'__SIZE_MAX__=0xffffffffU')
add_definitions(-D'__WCHAR_MAX__=0xffff')
add_definitions(-D'__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1=1')
add_definitions(-D'__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2=1')
add_definitions(-D'__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4=1')
add_definitions(-D'__DBL_DENORM_MIN__=\(\(double\)4.9406564584124654e-324L\)')
add_definitions(-D'__GCC_ATOMIC_CHAR_LOCK_FREE=2')
add_definitions(-D'__GCC_IEC_559=0')
add_definitions(-D'__FLT_EVAL_METHOD__=0')
add_definitions(-D'__GCC_ATOMIC_CHAR32_T_LOCK_FREE=2')
add_definitions(-D'__UINT_FAST64_MAX__=0xffffffffffffffffULL')
add_definitions(-D'__SIG_ATOMIC_TYPE__=int')
add_definitions(-D'__DBL_MIN_10_EXP__=\(-307\)')
add_definitions(-D'__FINITE_MATH_ONLY__=0')
add_definitions(-D'__GNUC_PATCHLEVEL__=0')
add_definitions(-D'__UINT_FAST8_MAX__=0xffffffffU')
add_definitions(-D'__has_include\(STR\)=__has_include__\(STR\)')
add_definitions(-D'__DEC64_MAX_EXP__=385')
add_definitions(-D'__INT8_C\(c\)=c')
add_definitions(-D'__UINT_LEAST64_MAX__=0xffffffffffffffffULL')
add_definitions(-D'__SHRT_MAX__=0x7fff')
add_definitions(-D'__LDBL_MAX__=1.7976931348623157e+308L')
add_definitions(-D'__UINT_LEAST8_MAX__=0xff')
add_definitions(-D'__GCC_ATOMIC_BOOL_LOCK_FREE=2')
add_definitions(-D'__UINTMAX_TYPE__=long long unsigned int')
add_definitions(-D'__DEC32_EPSILON__=1E-6DF')
add_definitions(-D'__CHAR_UNSIGNED__=1')
add_definitions(-D'__UINT32_MAX__=0xffffffffUL')
add_definitions(-D'__LDBL_MAX_EXP__=1024')
add_definitions(-D'__WINT_MIN__=0U')
add_definitions(-D'__SCHAR_MAX__=0x7f')
add_definitions(-D'__WCHAR_MIN__=0')
add_definitions(-D'__INT64_C\(c\)=c \#\# LL')
add_definitions(-D'__DBL_DIG__=15')
add_definitions(-D'__GCC_ATOMIC_POINTER_LOCK_FREE=2')
add_definitions(-D'__SIZEOF_INT__=4')
add_definitions(-D'__SIZEOF_POINTER__=4')
add_definitions(-D'__USER_LABEL_PREFIX__')
add_definitions(-D'__STDC_HOSTED__=1')
add_definitions(-D'__LDBL_HAS_INFINITY__=1')
add_definitions(-D'__XTENSA_EL__=1')
add_definitions(-D'__FLT_EPSILON__=1.1920928955078125e-7F')
add_definitions(-D'__LDBL_MIN__=2.2250738585072014e-308L')
add_definitions(-D'__STDC_UTF_16__=1')
add_definitions(-D'__DEC32_MAX__=9.999999E96DF')
add_definitions(-D'__INT32_MAX__=0x7fffffffL')
add_definitions(-D'__SIZEOF_LONG__=4')
add_definitions(-D'__UINT16_C\(c\)=c')
add_definitions(-D'__DECIMAL_DIG__=17')
add_definitions(-D'__has_include_next\(STR\)=__has_include_next__\(STR\)')
add_definitions(-D'__LDBL_HAS_QUIET_NAN__=1')
add_definitions(-D'__GNUC__=5')
add_definitions(-D'__FLT_HAS_DENORM__=1')
add_definitions(-D'__SIZEOF_LONG_DOUBLE__=8')
add_definitions(-D'__BIGGEST_ALIGNMENT__=16')
add_definitions(-D'__DBL_MAX__=\(\(double\)1.7976931348623157e+308L\)')
add_definitions(-D'__INT_FAST32_MAX__=0x7fffffff')
add_definitions(-D'__DBL_HAS_INFINITY__=1')
add_definitions(-D'__DEC32_MIN_EXP__=\(-94\)')
add_definitions(-D'__INT_FAST16_TYPE__=int')
add_definitions(-D'__LDBL_HAS_DENORM__=1')
add_definitions(-D'__DEC128_MAX__=9.999999999999999999999999999999999E6144DL')
add_definitions(-D'__INT_LEAST32_MAX__=0x7fffffffL')
add_definitions(-D'__DEC32_MIN__=1E-95DF')
add_definitions(-D'__DBL_MAX_EXP__=1024')
add_definitions(-D'__DEC128_EPSILON__=1E-33DL')
add_definitions(-D'__PTRDIFF_MAX__=0x7fffffff')
add_definitions(-D'__LONG_LONG_MAX__=0x7fffffffffffffffLL')
add_definitions(-D'__SIZEOF_SIZE_T__=4')
add_definitions(-D'__SIZEOF_WINT_T__=4')
add_definitions(-D'__GXX_ABI_VERSION=1009')
add_definitions(-D'__FLT_MIN_EXP__=\(-125\)')
add_definitions(-D'__INT_FAST64_TYPE__=long long int')
add_definitions(-D'__FP_FAST_FMAF=1')
add_definitions(-D'__DBL_MIN__=\(\(double\)2.2250738585072014e-308L\)')
add_definitions(-D'__DEC128_MIN__=1E-6143DL')
add_definitions(-D'__REGISTER_PREFIX__')
add_definitions(-D'__UINT16_MAX__=0xffff')
add_definitions(-D'__DBL_HAS_DENORM__=1')
add_definitions(-D'__UINT8_TYPE__=unsigned char')
add_definitions(-D'__NO_INLINE__=1')
add_definitions(-D'__FLT_MANT_DIG__=24')
add_definitions(-D'__VERSION__=\"5.2.0\"')
add_definitions(-D'__UINT64_C\(c\)=c \#\# ULL')
add_definitions(-D'__GCC_ATOMIC_INT_LOCK_FREE=2')
add_definitions(-D'__FLOAT_WORD_ORDER__=__ORDER_LITTLE_ENDIAN__')
add_definitions(-D'__INT32_C\(c\)=c \#\# L')
add_definitions(-D'__DEC64_EPSILON__=1E-15DD')
add_definitions(-D'__ORDER_PDP_ENDIAN__=3412')
add_definitions(-D'__DEC128_MIN_EXP__=\(-6142\)')
add_definitions(-D'__INT_FAST32_TYPE__=int')
add_definitions(-D'__UINT_LEAST16_TYPE__=short unsigned int')
add_definitions(-D'__INT16_MAX__=0x7fff')
add_definitions(-D'__SIZE_TYPE__=unsigned int')
add_definitions(-D'__UINT64_MAX__=0xffffffffffffffffULL')
add_definitions(-D'__INT8_TYPE__=signed char')
add_definitions(-D'__ELF__=1')
add_definitions(-D'__xtensa__=1')
add_definitions(-D'__FLT_RADIX__=2')
add_definitions(-D'__INT_LEAST16_TYPE__=short int')
add_definitions(-D'__LDBL_EPSILON__=2.2204460492503131e-16L')
add_definitions(-D'__UINTMAX_C\(c\)=c \#\# ULL')
add_definitions(-D'__SIG_ATOMIC_MAX__=0x7fffffff')
add_definitions(-D'__GCC_ATOMIC_WCHAR_T_LOCK_FREE=2')
add_definitions(-D'__SIZEOF_PTRDIFF_T__=4')
add_definitions(-D'__DEC32_SUBNORMAL_MIN__=0.000001E-95DF')
add_definitions(-D'__INT_FAST16_MAX__=0x7fffffff')
add_definitions(-D'__UINT_FAST32_MAX__=0xffffffffU')
add_definitions(-D'__UINT_LEAST64_TYPE__=long long unsigned int')
add_definitions(-D'__FLT_HAS_QUIET_NAN__=1')
add_definitions(-D'__FLT_MAX_10_EXP__=38')
add_definitions(-D'__LONG_MAX__=0x7fffffffL')
add_definitions(-D'__DEC128_SUBNORMAL_MIN__=0.000000000000000000000000000000001E-6143DL')
add_definitions(-D'__FLT_HAS_INFINITY__=1')
add_definitions(-D'__UINT_FAST16_TYPE__=unsigned int')
add_definitions(-D'__DEC64_MAX__=9.999999999999999E384DD')
add_definitions(-D'__CHAR16_TYPE__=short unsigned int')
add_definitions(-D'__PRAGMA_REDEFINE_EXTNAME=1')
add_definitions(-D'__INT_LEAST16_MAX__=0x7fff')
add_definitions(-D'__DEC64_MANT_DIG__=16')
add_definitions(-D'__INT64_MAX__=0x7fffffffffffffffLL')
add_definitions(-D'__UINT_LEAST32_MAX__=0xffffffffUL')
add_definitions(-D'__GCC_ATOMIC_LONG_LOCK_FREE=2')
add_definitions(-D'__INT_LEAST64_TYPE__=long long int')
add_definitions(-D'__INT16_TYPE__=short int')
add_definitions(-D'__INT_LEAST8_TYPE__=signed char')
add_definitions(-D'__STDC_VERSION__=201112L')
add_definitions(-D'__DEC32_MAX_EXP__=97')
add_definitions(-D'__INT_FAST8_MAX__=0x7fffffff')
add_definitions(-D'__INTPTR_MAX__=0x7fffffff')
add_definitions(-D'__LDBL_MANT_DIG__=53')
add_definitions(-D'__DBL_HAS_QUIET_NAN__=1')
add_definitions(-D'__SIG_ATOMIC_MIN__=\(-__SIG_ATOMIC_MAX__ - 1\)')
add_definitions(-D'__INTPTR_TYPE__=int')
add_definitions(-D'__UINT16_TYPE__=short unsigned int')
add_definitions(-D'__WCHAR_TYPE__=short unsigned int')
add_definitions(-D'__SIZEOF_FLOAT__=4')
add_definitions(-D'__UINTPTR_MAX__=0xffffffffU')
add_definitions(-D'__DEC64_MIN_EXP__=\(-382\)')
add_definitions(-D'__INT_FAST64_MAX__=0x7fffffffffffffffLL')
add_definitions(-D'__GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1')
add_definitions(-D'__FLT_DIG__=6')
add_definitions(-D'__UINT_FAST64_TYPE__=long long unsigned int')
add_definitions(-D'__INT_MAX__=0x7fffffff')
add_definitions(-D'__INT64_TYPE__=long long int')
add_definitions(-D'__FLT_MAX_EXP__=128')
add_definitions(-D'__DBL_MANT_DIG__=53')
add_definitions(-D'__INT_LEAST64_MAX__=0x7fffffffffffffffLL')
add_definitions(-D'__GCC_ATOMIC_CHAR16_T_LOCK_FREE=2')
add_definitions(-D'__DEC64_MIN__=1E-383DD')
add_definitions(-D'__WINT_TYPE__=unsigned int')
add_definitions(-D'__UINT_LEAST32_TYPE__=long unsigned int')
add_definitions(-D'__SIZEOF_SHORT__=2')
add_definitions(-D'__LDBL_MIN_EXP__=\(-1021\)')
add_definitions(-D'__INT_LEAST8_MAX__=0x7f')
add_definitions(-D'__LDBL_MAX_10_EXP__=308')
add_definitions(-D'__ATOMIC_RELAXED=0')
add_definitions(-D'__DBL_EPSILON__=\(\(double\)2.2204460492503131e-16L\)')
add_definitions(-D'__XTENSA_WINDOWED_ABI__=1')
add_definitions(-D'__UINT8_C\(c\)=c')
add_definitions(-D'__INT_LEAST32_TYPE__=long int')
add_definitions(-D'__SIZEOF_WCHAR_T__=2')
add_definitions(-D'__UINT64_TYPE__=long long unsigned int')
add_definitions(-D'__INT_FAST8_TYPE__=int')
add_definitions(-D'__GNUC_STDC_INLINE__=1')
add_definitions(-D'__DBL_DECIMAL_DIG__=17')
add_definitions(-D'__STDC_UTF_32__=1')
add_definitions(-D'__DEC_EVAL_METHOD__=2')
add_definitions(-D'__XTENSA__=1')
add_definitions(-D'__ORDER_BIG_ENDIAN__=4321')
add_definitions(-D'__UINT32_C\(c\)=c \#\# UL')
add_definitions(-D'__INTMAX_MAX__=0x7fffffffffffffffLL')
add_definitions(-D'__BYTE_ORDER__=__ORDER_LITTLE_ENDIAN__')
add_definitions(-D'__FLT_DENORM_MIN__=1.4012984643248171e-45F')
add_definitions(-D'__INT8_MAX__=0x7f')
add_definitions(-D'__UINT_FAST32_TYPE__=unsigned int')
add_definitions(-D'__CHAR32_TYPE__=long unsigned int')
add_definitions(-D'__FLT_MAX__=3.4028234663852886e+38F')
add_definitions(-D'__INT32_TYPE__=long int')
add_definitions(-D'__SIZEOF_DOUBLE__=8')
add_definitions(-D'__FLT_MIN_10_EXP__=\(-37\)')
add_definitions(-D'__INTMAX_TYPE__=long long int')
add_definitions(-D'__DEC128_MAX_EXP__=6145')
add_definitions(-D'__ATOMIC_CONSUME=1')
add_definitions(-D'__GNUC_MINOR__=2')
add_definitions(-D'__UINTMAX_MAX__=0xffffffffffffffffULL')
add_definitions(-D'__DEC32_MANT_DIG__=7')
add_definitions(-D'__DBL_MAX_10_EXP__=308')
add_definitions(-D'__LDBL_DENORM_MIN__=4.9406564584124654e-324L')
add_definitions(-D'__INT16_C\(c\)=c')
add_definitions(-D'__STDC__=1')
add_definitions(-D'__PTRDIFF_TYPE__=int')
add_definitions(-D'__ATOMIC_SEQ_CST=5')
add_definitions(-D'__UINT32_TYPE__=long unsigned int')
add_definitions(-D'__UINTPTR_TYPE__=unsigned int')
add_definitions(-D'__DEC64_SUBNORMAL_MIN__=0.000000000000001E-383DD')
add_definitions(-D'__DEC128_MANT_DIG__=34')
add_definitions(-D'__LDBL_MIN_10_EXP__=\(-307\)')
add_definitions(-D'__SIZEOF_LONG_LONG__=8')
add_definitions(-D'__GCC_ATOMIC_LLONG_LOCK_FREE=1')
add_definitions(-D'__LDBL_DIG__=15')
add_definitions(-D'__FLT_DECIMAL_DIG__=9')
add_definitions(-D'__UINT_FAST16_MAX__=0xffffffffU')
add_definitions(-D'__GCC_ATOMIC_SHORT_LOCK_FREE=2')
add_definitions(-D'__UINT_FAST8_TYPE__=unsigned int')
add_definitions(-D'__ATOMIC_ACQ_REL=4')
add_definitions(-D'__ATOMIC_RELEASE=3')

include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bluedroid")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls_port")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/variants/pocket_32")
include_directories("$ENV{HOME}/Workspace/esp32_sensors/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")
include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
include_directories("$ENV{HOME}/.platformio/packages/tool-unity")
include_directories("./.piolibdeps/BME280_ID901/src")

FILE(GLOB_RECURSE SRC_LIST "/Users/aleksandr.komarica/Workspace/esp32_sensors/src/*.*" "/Users/aleksandr.komarica/Workspace/esp32_sensors/lib/*.*" "/Users/aleksandr.komarica/Workspace/esp32_sensors/.piolibdeps/*.*")
